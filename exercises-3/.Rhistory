lithium_cleaned = subset(lithium_cleaned, lithium_cleaned$ResultMeasureValue != "0.0")
lithium_cleaned = subset(lithium_cleaned, lithium_cleaned$ResultMeasureValue != "0.00")
lithium_cleaned$ResultMeasureValue.Numeric = as.numeric(lithium_cleaned$ResultMeasureValue)
lithium_cleaned$ResultMeasureValue.Numeric = as.numeric(as.character(lithium_cleaned$ResultMeasureValue))
lithium_cleaned = arrange(lithium_cleaned, ResultMeasureValue.Numeric)
View(lithium_cleaned)
lithium_cleaned = subset(lithium_cleaned, isFALSE(is.na(lithium_cleaned$ResultMeasureValue.Numeric)))
?subset
View(lithium_cleaned)
lithium_cleaned = subset(lithium, lithium$ResultMeasure.MeasureUnitCode == "ug/l")
lithium_cleaned = subset(lithium_cleaned, lithium_cleaned$ResultMeasureValue != "0.0")
lithium_cleaned = subset(lithium_cleaned, lithium_cleaned$ResultMeasureValue != "0.00")
lithium_cleaned$ResultMeasureValue.Numeric = as.numeric(lithium_cleaned$ResultMeasureValue)
lithium_cleaned = subset(lithium_cleaned, lithium_cleaned$ResultMeasureValue.Numeric < 2000)
View(lithium_cleaned)
lithiumSamples <- read.csv("~/UT Courses/3. Spring 2019/Causal Inference/Research Paper/lithiumSamples.csv")
View(lithiumSamples)
class(lithium_cleaned$ResultMeasureValue[1])
lithiumSamples_decimals <- read.csv("~/UT Courses/3. Spring 2019/Causal Inference/Research Paper/lithiumSamples_decimals.csv")
View(lithiumSamples_decimals)
class(lithiumSamples$ResultMeasureValue[1])
View(milk)
View(lithiumSamples)
lithiumSamples$ResultMeasureValue.ug = lithiumSamples$ResultMeasureValue
lithiumSamples <- within(lithiumSamples, ResultMeasureValue.ug[ResultMeasure.MeasureUnitCode == "mg/l"]
<- ResultMeasureValue[ResultMeasure.MeasureUnitCode == "mg/l"]*100)
lithiumSamples <- within(lithiumSamples, ResultMeasureValue.ug[ResultMeasure.MeasureUnitCode == "mg/l"]
<- ResultMeasureValue[ResultMeasure.MeasureUnitCode == "mg/l"]*1000)
lithiumSamples_5000 = subset(lithiumSamples, lithiumSamples$ResultMeasureValue.ug < 5000)
View(lithiumSamples_5000)
ggplot(data = lithiumSamples_5000, aes(x = ResultMeasureValue.ug)) +
geom_histogram(binwidth=10)
lithium_cleaned = arrange(lithiumSamples, ResultMeasureValue.ug)
View(lithium_cleaned)
lithiumSamples_1000 = subset(lithiumSamples, lithiumSamples$ResultMeasureValue.ug < 1000)
ggplot(data = lithiumSamples_1000, aes(x = ResultMeasureValue.ug)) +
geom_histogram(binwidth=10)
ggplot(data = lithiumSamples_1000, aes(x = ResultMeasureValue.ug)) +
geom_histogram(binwidth=1)
ggplot(data = lithiumSamples_1000, aes(x = ResultMeasureValue.ug)) +
geom_histogram(binwidth=5)
ggplot(data = lithiumSamples_1000, aes(x = ResultMeasureValue.ug)) +
geom_histogram(binwidth=10)
ggplot(data = lithiumSamples_1000, aes(x = ResultMeasureValue.ug)) +
geom_histogram(binwidth=8)
ggplot(data = lithiumSamples_1000, aes(x = ResultMeasureValue.ug)) +
geom_histogram(binwidth=10)
View(lithiumSamples_1000)
is.numeric.Date(lithiumSamples_1000$ActivityStartDate[2])
lithiumSamples_1000$ActivityStartDate[2]
lithiumSamples_1000$ActivityStartDate.Date = as.Date(lithiumSamples_1000$ActivityStartDate, format = "%m/%d/%Y")
lithiumSamples_1000$ActivityStartDate.Date[2]-lithiumSamples_1000$ActivityStartDate.Date[3]
min(lithiumSamples_1000$ActivityStartDate.Date)
max(lithiumSamples_1000$ActivityStartDate.Date)
lithSummary = lithiumSamples_1000 %>%
group_by(MonitoringLocationIdentifier) %>%
summarize(
ChangeInLevel = max(ResultMeasureValue.ug)-rmin(ResultMeasureValue.ug),
NumberOfObs = nrow(ResultMeasureValue.ug)
LengthOfTime = max(ActivityStartDate.Date)-min(ActivityStartDate.Date)
)
lithSummary = lithiumSamples_1000 %>%
group_by(MonitoringLocationIdentifier) %>%
summarize(
ChangeInLevel = max(ResultMeasureValue.ug)-rmin(ResultMeasureValue.ug),
NumberOfObs = nrow(ResultMeasureValue.ug),
LengthOfTime = max(ActivityStartDate.Date)-min(ActivityStartDate.Date)
)
lithSummary = lithiumSamples_1000 %>%
group_by(MonitoringLocationIdentifier) %>%
summarize(
ChangeInLevel = max(ResultMeasureValue.ug)-min(ResultMeasureValue.ug),
NumberOfObs = nrow(ResultMeasureValue.ug),
LengthOfTime = max(ActivityStartDate.Date)-min(ActivityStartDate.Date)
)
lithSummary = lithiumSamples_1000 %>%
group_by(MonitoringLocationIdentifier) %>%
summarize(
ChangeInLevel = max(ResultMeasureValue.ug)-min(ResultMeasureValue.ug),
NumberOfObs = nrow(.),
LengthOfTime = max(ActivityStartDate.Date)-min(ActivityStartDate.Date)
)
View(lithSummary)
lithSummary = lithiumSamples_1000 %>%
group_by(MonitoringLocationIdentifier) %>%
summarize(
Org = OrganizationIdentifier,
ChangeInLevel = max(ResultMeasureValue.ug)-min(ResultMeasureValue.ug),
NumberOfObs = nrow(.),
LengthOfTime = max(ActivityStartDate.Date)-min(ActivityStartDate.Date)
)
lithSummary = lithiumSamples_1000 %>%
group_by(MonitoringLocationIdentifier) %>%
summarize(
Org = ï..OrganizationIdentifier,
ChangeInLevel = max(ResultMeasureValue.ug)-min(ResultMeasureValue.ug),
NumberOfObs = nrow(.),
LengthOfTime = max(ActivityStartDate.Date)-min(ActivityStartDate.Date)
)
lithSummary = lithiumSamples_1000 %>%
group_by(ï..OrganizationIdentifier, MonitoringLocationIdentifier) %>%
summarize(
ChangeInLevel = max(ResultMeasureValue.ug)-min(ResultMeasureValue.ug),
NumberOfObs = nrow(.),
LengthOfTime = max(ActivityStartDate.Date)-min(ActivityStartDate.Date)
)
View(lithium)
wpp2019_india2005to2020 <- read.csv("~/Uttar Pradesh Neo-natal Health/UttarPradeshNeoNatalHealth/data/wpp2019_india2005to2020.csv", header=FALSE)
View(wpp2019_india2005to2020)
View(wpp2019_india2005to2020)
wpp2019_india2005to2020 <- read.csv("~/Uttar Pradesh Neo-natal Health/UttarPradeshNeoNatalHealth/data/wpp2019_india2005to2020.csv")
View(wpp2019_india2005to2020)
library(tidyverse)
?geom_curve
ggplot(data = wpp2019_india2005to2020) +
geom_segment(aes(x=Year, y=Linear.interpolation.between.year.2.ave))+
geom_segment(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))+
wpp2019_india2005to2020$Linear.interpolation.between.year.2.ave
ggplot(data = wpp2019_india2005to2020) +
geom_segment(aes(x=Year, y=Linear.interpolation.between.year.2.ave)) +
geom_segment(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))
ggplot(data = wpp2019_india2005to2020) +
geom_point(aes(x=Year, y=Linear.interpolation.between.year.2.ave)) +
geom_point(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))
ggplot(data = wpp2019_india2005to2020) +
geom_point(aes(x=Year, y=Per.year.ave.interpolation)) +
geom_point(aes(x=Year, y=Linear.interpolation.between.year.2.ave)) +
geom_point(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))
ggplot(data = wpp2019_india2005to2020) +
geom_path(aes(x=Year, y=Per.year.ave.interpolation)) +
geom_path(aes(x=Year, y=Linear.interpolation.between.year.2.ave)) +
geom_path(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))
ggplot(data = wpp2019_india2005to2020) +
geom_step(aes(x=Year, y=Per.year.ave.interpolation)) +
geom_path(aes(x=Year, y=Linear.interpolation.between.year.2.ave)) +
geom_path(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))
ggplot(data = wpp2019_india2005to2020) +
geom_step(aes(x=Year, y=Per.year.ave.interpolation), color="red") +
geom_path(aes(x=Year, y=Linear.interpolation.between.year.2.ave)) +
geom_path(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))
ggplot(data = wpp2019_india2005to2020) +
geom_step(aes(x=Year, y=Per.year.ave.interpolation), color="red") +
geom_path(aes(x=Year, y=Linear.interpolation.between.year.2.ave), color="blue") +
geom_path(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave))
ggplot(data = wpp2019_india2005to2020) +
geom_step(aes(x=Year, y=Per.year.ave.interpolation)) +
geom_path(aes(x=Year, y=Linear.interpolation.between.year.2.ave), color="blue") +
geom_path(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave)color="red")
ggplot(data = wpp2019_india2005to2020) +
geom_step(aes(x=Year, y=Per.year.ave.interpolation)) +
geom_path(aes(x=Year, y=Linear.interpolation.between.year.2.ave), color="blue") +
geom_path(aes(x=Year, y=Linear.in.logs.interpolation.between.year.2.ave), color="red")
ggplot(data = wpp2019_india2005to2020) +
geom_step(aes(x=Year, y=Per.year.ave.interpolation)) +
geom_path(aes(x=Year, y=Linear.interpolation.between.year.3.ave), color="blue") +
geom_path(aes(x=Year, y=Linear.in.logs.interpolation.between.year.3.ave), color="red")
setwd("~/UT Courses/3. Spring 2019/Data Mining, Statistical Learning/Homework/DataScienceCourseHomework/exercises-3")
read.csv("./data/wine.csv")
wine_data = read.csv("./data/wine.csv")
View(wine_data)
wine_x = wine_data[,1:11]
View(wine_x)
wine_score = wine_data[,12]
wine_color = wine_data[,13]
# standardize data
wine_x_st = scale(wine_x)
View(wine_x_st)
#
pc_wine = prcomp(wine_x_st, scale=TRUE)
View(pc_wine)
pc_wine$rotation
pc_wine$x
plot(pc_wine$x[,PC1], pc_wine$x[,PC2])
plot(pc_wine$x[,1], pc_wine$x[,PC2])
plot(pc_wine$x[,1], pc_wine$x[,2])
var_bycomponent = apply(wine_x_st, 2, var)
sum(var_bycomponent)
plot(pc_wine)
summary(pc_wine)
# add outcomes back in for graphing
pc_wine_graph_data = pc_wine$x
# add outcomes back in for graphing
pc_wine_graph_data = as.data.frame(pc_wine$x)
pc_wine_graph_data$score = wine_score
pc_wine_graph_data$color = wine_color
library(tidyverse)
View(pc_wine_graph_data)
ggplot(data = pc_wine_graph_data) +
geom_point(x = PC1, y = PC2, color = color)
geom_point(aes(x = PC1, y = PC2, color = color)
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color))
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color))
ggplot(data = pc_wine_graph_data) +
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color)) +
scale_color_manual(values = c("#722f37", "#dbdd46"))
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color)) +
scale_color_manual(values = c("#722f37", "#dbdd46"))
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/10) +
scale_color_manual(values = c("#722f37", "#dbdd46"))
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/5) +
scale_color_manual(values = c("#722f37", "#dbdd46"))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score), alpha = 1/5)
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score)) +
scale_fill_gradient2_tableau(palette = "Orange-Blue Diverging")
library(ggthemes)
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score)) +
scale_fill_gradient2_tableau(palette = "Orange-Blue Diverging")
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score)) +
scale_fill_gradient(palette = "Orange-Blue Diverging")
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score)) +
scale_fill_gradient()
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score)) +
scale_fill_gradient2_tableau(palette = "Orange-Blue Diverging")
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, group = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, type = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, shape = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, shape = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, shape = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, shape = score))
rlang::last_error()
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, group = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, stroke = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, size = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, fill = score))
# graph grouped by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/5) +
scale_color_manual(values = c("#722f37", "#dbdd46"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/3) +
scale_color_manual(values = c("#722f37", "#dbdd46"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/4) +
scale_color_manual(values = c("#722f37", "#dbdd46"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/4) +
scale_color_manual(values = c("#722f37", "#eccd13"))
View(wine_data)
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC3, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC4, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC5, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC6, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC8, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
install.packages("LICORS")
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score))
p
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score)) +
theme_clean() +
theme(plot.background=element_blank())
clustering = kmeanspp(wine_x, k=2, nstart=25)
library(LICORS)
clustering = kmeanspp(wine_x, k=2, nstart=25)
wine_cluster = kmeanspp(wine_x, k=2, nstart=25)
wine_cluster$centers
wine_cluster$cluster
wine_cluster_color = kmeanspp(wine_x, k=2, nstart=25)
wine_cluster_score = kmeanspp(wine_x, k=7, nstart=25)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_color$cluster
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
wine_cluster_score = kmeanspp(wine_x, k=7, nstart=25)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
wine_cluster_color = kmeanspp(wine_x, k=2, nstart=25)
wine_cluster_score = kmeanspp(wine_x, k=7, nstart=25)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
wine_cluster_color = kmeanspp(wine_x, k=2, nstart=50)
wine_cluster_score = kmeanspp(wine_x, k=7, nstart=50)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
View(cluster_wine_data)
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
table(score = cluster_wine_data$score-3, cluster = cluster_wine_data$seven_clusters)
table(score = cluster_wine_data$score - 3, cluster = cluster_wine_data$seven_clusters)
wine_cluster_color = kmeanspp(wine_x, k=2, nstart=50)
wine_cluster_score = kmeanspp(wine_x, k=7, nstart=50)
wine_cluster_score = kmeanspp(wine_x, k=7, nstart=50)
wine_cluster_score = kmeanspp(wine_x, k=7, nstart=50, algorithm="MacQueen")
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score - 3, cluster = cluster_wine_data$seven_clusters)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
cluster_wine_data$score = cluster_wine_data$score - 3
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score - 3, cluster = cluster_wine_data$seven_clusters)
cluster_wine_data$score = cluster_wine_data$score - 2
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$score - 3, cluster = cluster_wine_data$seven_clusters)
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
table(score = cluster_wine_data$score, cluster = cluster_wine_data$seven_clusters)
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
summary(cluster_wine_data)
table(score = cluster_wine_data$quality, cluster = cluster_wine_data$seven_clusters)
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
wine_cluster_color = kmeanspp(wine_x_st, k=2, nstart=50)
wine_cluster_score = kmeanspp(wine_x_st, k=7, nstart=50, algorithm="MacQueen")
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
cluster_wine_data$score = cluster_wine_data$quality - 2
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$quality, cluster = cluster_wine_data$seven_clusters)
wine_cluster_score = kmeanspp(wine_x_st, k=7, nstart=50)
pc_wine_cluster_data = as.data.frame(pc_wine$x)
pc_wine_cluster_color = kmeanspp(pc_wine_cluster_data, k=2, nstart=50)
pc_wine_cluster_score = kmeanspp(pc_wine_cluster_data, k=7, nstart=50)
# read data
wine_data = read.csv("./data/wine.csv")
# separate data into inputs and outcomes
wine_x = wine_data[,1:11]
wine_score = wine_data[,12]
wine_color = wine_data[,13]
# standardize data
wine_x_st = scale(wine_x)
# calculate principal components
pc_wine = prcomp(wine_x_st, scale=TRUE)
summary(pc_wine)
plot(pc_wine)
# add outcomes back in for graphing
pc_wine_graph_data = as.data.frame(pc_wine$x)
pc_wine_graph_data$score = wine_score
pc_wine_graph_data$color = wine_color
# graph with points colored by wine color
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = color), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank()) +
scale_color_manual(values = c("#722f37", "#eccd13"))
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = score)) +
theme_clean() +
theme(plot.background=element_blank())
wine_cluster_color = kmeanspp(wine_x_st, k=2, nstart=50)
wine_cluster_score = kmeanspp(wine_x_st, k=7, nstart=50)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
wine_cluster_score = kmeanspp(wine_x_st, k=7, nstart=50)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
cluster_wine_data$score = cluster_wine_data$quality - 2
cluster_wine_data$score = cluster_wine_data$quality
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$quality, cluster = cluster_wine_data$seven_clusters)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
table(score = cluster_wine_data$quality, cluster = cluster_wine_data$seven_clusters)
cluster_wine_data$score_bucketed = cluster_wine_data$quality
cluster_wine_data[cluster_wine_data$score_bucketed == 3, score_bucketed]= "< 4"
cluster_wine_data[cluster_wine_data$score_bucketed == 3, "score_bucketed"]= "< 4"
View(cluster_wine_data)
cluster_wine_data[cluster_wine_data$score_bucketed == 3, "score_bucketed"]= "< 5"
cluster_wine_data[cluster_wine_data$score_bucketed == 4, "score_bucketed"]= "< 5"
cluster_wine_data[cluster_wine_data$score_bucketed == 8, "score_bucketed"]= "> 7"
cluster_wine_data[cluster_wine_data$score_bucketed == 9, "score_bucketed"]= "> 7"
wine_cluster_score = kmeanspp(wine_x_st, k=5, nstart=50)
cluster_wine_data$five_clusters = wine_cluster_score$cluster
cluster_wine_data$score_bucketed = cluster_wine_data$quality
cluster_wine_data[cluster_wine_data$score_bucketed == 3, "score_bucketed"]= "< 5"
cluster_wine_data[cluster_wine_data$score_bucketed == 4, "score_bucketed"]= "< 5"
cluster_wine_data[cluster_wine_data$score_bucketed == 8, "score_bucketed"]= "> 7"
cluster_wine_data[cluster_wine_data$score_bucketed == 9, "score_bucketed"]= "> 7"
table(score = cluster_wine_data$score_bucketed, cluster = cluster_wine_data$five_clusters)
wine_cluster_score = kmeanspp(wine_x_st, k=7, nstart=50)
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(score = cluster_wine_data$quality, cluster = cluster_wine_data$five_clusters)
wine_cluster_color = kmeanspp(wine_x_st, k=2, nstart=50)
cluster_wine_data = wine_data
cluster_wine_data$two_clusters = wine_cluster_color$cluster
table(color = cluster_wine_data$color, cluster = cluster_wine_data$two_clusters)
wine_cluster_score = kmeanspp(wine_x_st, k=7, nstart=100)
cluster_wine_data$seven_clusters = wine_cluster_score$cluster
table(score = cluster_wine_data$quality, cluster = cluster_wine_data$five_clusters)
table(score = cluster_wine_data$quality, cluster = cluster_wine_data$seven_clusters)
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = as.factor(score))) +
theme_clean() +
theme(plot.background=element_blank())
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = as.factor(score), alpha = 1/4)) +
theme_clean() +
theme(plot.background=element_blank())
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = as.factor(score), alpha = 1/10)) +
theme_clean() +
theme(plot.background=element_blank())
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = as.factor(score)), alpha = 1/10) +
theme_clean() +
theme(plot.background=element_blank())
# graph with points colored by wine score
ggplot(data = pc_wine_graph_data) +
geom_point(aes(x = PC1, y = PC2, color = as.factor(score)), alpha = 1/4) +
theme_clean() +
theme(plot.background=element_blank())
